916. Word Subsets (Medium)

// Question
You are given two string arrays words1 and words2.

A string b is a subset of string a if every letter in b occurs in a including multiplicity.

For example, "wrr" is a subset of "warrior" but is not a subset of "world".
A string a from words1 is universal if for every string b in words2, b is a subset of a.

Return an array of all the universal strings in words1. You may return the answer in any order.


Example 1:

Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["e","o"]
Output: ["facebook","google","leetcode"]
Example 2:

Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["l","e"]
Output: ["apple","google","leetcode"]
 
Constraints:

1 <= words1.length, words2.length <= 104
1 <= words1[i].length, words2[i].length <= 10
words1[i] and words2[i] consist only of lowercase English letters.
All the strings of words1 are unique.

// Solution
class Solution 
{
public:
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) 
    {
        int child[26]={0};
        vector<string>ans;
        for(auto it:words2){
            int tmp[26]={0};
            for(int i=0;i<it.length();i++)
            {
                tmp[it[i]-'a']++;
            }
            for(int i=0;i<26;i++)
            {
                child[i]=max(child[i],tmp[i]);
            }
        }
        for(auto it:words1){
            bool check=true;
            int tmp[26]={0};
            for(int i=0;i<it.length();i++){
                tmp[it[i]-'a']++;
            }
            for(int i=0;i<26;i++){
                if(tmp[i]<child[i]){
                    check=false;
                    break;
                }
            }
            if(check){
                ans.push_back(it);
            }
        }
        return ans;
    }
};